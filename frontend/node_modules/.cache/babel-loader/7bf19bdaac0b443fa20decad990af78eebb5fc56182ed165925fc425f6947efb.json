{"ast":null,"code":"import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import React,{useState}from'react';import StartPage from'./components/StartPage';import Scanner from'./components/Scanner';import Results from'./components/Results';import Login from'./components/Login';import BatteryRedirect from'./components/BatteryRedirect';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const[currentPage,setCurrentPage]=useState('start');const[scanResult,setScanResult]=useState(null);const handleStart=()=>{setCurrentPage('scanner');};const handleScanResults=result=>{setScanResult(result);setCurrentPage('results');};const handleLogin=()=>{setCurrentPage('login');};const handleLoginSuccess=user=>{// TODO: Implement point tracking or further user actions\nconsole.log('Logged in user:',user);// For now, just go back to start\nsetCurrentPage('start');};const handleScanAgain=()=>{setCurrentPage('scanner');};const handleBatteryBack=()=>{setCurrentPage('scanner');};// Render the appropriate page based on current state\nconst renderPage=()=>{switch(currentPage){case'start':return/*#__PURE__*/_jsx(StartPage,{onStart:handleStart});case'scanner':return/*#__PURE__*/_jsx(Scanner,{onResults:handleScanResults});case'results':return/*#__PURE__*/_jsx(Results,{result:scanResult,onLogin:handleLogin,onScanAgain:handleScanAgain});case'login':return/*#__PURE__*/_jsx(Login,{onLoginSuccess:handleLoginSuccess});case'battery':return/*#__PURE__*/_jsx(BatteryRedirect,{onBack:handleBatteryBack});default:return/*#__PURE__*/_jsx(StartPage,{onStart:handleStart});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(StartPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/scanner\",element:/*#__PURE__*/_jsx(Scanner,{})}),/*#__PURE__*/_jsx(Route,{path:\"/results\",element:/*#__PURE__*/_jsx(Results,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/battery\",element:/*#__PURE__*/_jsx(BatteryRedirect,{})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:renderPage()})]});};export default App;","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","React","useState","StartPage","Scanner","Results","Login","BatteryRedirect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","currentPage","setCurrentPage","scanResult","setScanResult","handleStart","handleScanResults","result","handleLogin","handleLoginSuccess","user","console","log","handleScanAgain","handleBatteryBack","renderPage","onStart","onResults","onLogin","onScanAgain","onLoginSuccess","onBack","children","path","element","className"],"sources":["D:/student/midleproject/RecycleMe-2/frontend/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport StartPage from './components/StartPage';\r\nimport Scanner from './components/Scanner';\r\nimport Results from './components/Results';\r\nimport Login from './components/Login';\r\nimport BatteryRedirect from './components/BatteryRedirect';\r\n\r\nconst App = () => {\r\n  const [currentPage, setCurrentPage] = useState('start');\r\n  const [scanResult, setScanResult] = useState(null);\r\n\r\n  const handleStart = () => {\r\n    setCurrentPage('scanner');\r\n  };\r\n\r\n  const handleScanResults = (result) => {\r\n    setScanResult(result);\r\n    setCurrentPage('results');\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    setCurrentPage('login');\r\n  };\r\n\r\n  const handleLoginSuccess = (user) => {\r\n    // TODO: Implement point tracking or further user actions\r\n    console.log('Logged in user:', user);\r\n    // For now, just go back to start\r\n    setCurrentPage('start');\r\n  };\r\n\r\n  const handleScanAgain = () => {\r\n    setCurrentPage('scanner');\r\n  };\r\n\r\n  const handleBatteryBack = () => {\r\n    setCurrentPage('scanner');\r\n  };\r\n\r\n  // Render the appropriate page based on current state\r\n  const renderPage = () => {\r\n    switch (currentPage) {\r\n      case 'start':\r\n        return <StartPage onStart={handleStart} />;\r\n      case 'scanner':\r\n        return <Scanner onResults={handleScanResults} />;\r\n      case 'results':\r\n        return (\r\n          <Results \r\n            result={scanResult} \r\n            onLogin={handleLogin} \r\n            onScanAgain={handleScanAgain} \r\n          />\r\n        );\r\n      case 'login':\r\n        return <Login onLoginSuccess={handleLoginSuccess} />;\r\n      case 'battery':\r\n        return <BatteryRedirect onBack={handleBatteryBack} />;\r\n      default:\r\n        return <StartPage onStart={handleStart} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<StartPage />} />\r\n          <Route path=\"/scanner\" element={<Scanner />} />\r\n          <Route path=\"/results\" element={<Results />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/battery\" element={<BatteryRedirect />} />\r\n        </Routes>\r\n      </Router>\r\n      \r\n      <div className=\"App\">\r\n        {renderPage()}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}